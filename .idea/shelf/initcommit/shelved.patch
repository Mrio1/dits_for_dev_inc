Index: src/main/java/com/example/dits/configurators/SecurityWebApplicationInitializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.dits.configurators;\r\n\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer;\r\n\r\n@Configuration\r\npublic class SecurityWebApplicationInitializer extends AbstractSecurityWebApplicationInitializer {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/dits/configurators/SecurityWebApplicationInitializer.java b/src/main/java/com/example/dits/configurators/SecurityWebApplicationInitializer.java
--- a/src/main/java/com/example/dits/configurators/SecurityWebApplicationInitializer.java	(revision 91e5551f41463d2446e008e699e10c75a1d9fc8e)
+++ b/src/main/java/com/example/dits/configurators/SecurityWebApplicationInitializer.java	(date 1641307878722)
@@ -3,6 +3,6 @@
 import org.springframework.context.annotation.Configuration;
 import org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer;
 
-@Configuration
+
 public class SecurityWebApplicationInitializer extends AbstractSecurityWebApplicationInitializer {
 }
Index: src/main/java/com/example/dits/configurators/SecurityConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.dits.configurators;\r\n\r\nimport com.example.dits.handlers.CustomSuccessHandler;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\n\r\nimport javax.sql.DataSource;\r\n\r\n\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfiguration extends WebSecurityConfigurerAdapter {\r\n\r\n    private final CustomSuccessHandler customSuccessHandler;\r\n\r\n    private final PasswordEncoder passwordEncoder;\r\n    // из какого пакета\r\n    private final DataSource dataSource;\r\n\r\n    @Autowired\r\n    public SecurityConfiguration(CustomSuccessHandler customSuccessHandler, DataSource dataSource) {\r\n        this.customSuccessHandler = customSuccessHandler;\r\n        this.dataSource = dataSource;\r\n        passwordEncoder = new BCryptPasswordEncoder();\r\n    }\r\n\r\n\r\n    @Autowired\r\n    public void configureGlobalSecurity(AuthenticationManagerBuilder auth) throws  Exception{\r\n        auth.jdbcAuthentication().dataSource(dataSource)\r\n                .passwordEncoder(passwordEncoder)\r\n                .usersByUsernameQuery(\"select login, password, 'true' from user\" +\r\n                        \" join users_role on user.userId = users_role.userId where login =?\")\r\n                .authoritiesByUsernameQuery(\"select login, roleName from user \" +\r\n                        \"join users_role on user.userId = users_role.userId join role on \" +\r\n                        \"users_role.roleId = role.roleId where login =?\");\r\n    }\r\n\r\n    @Override\r\n    protected void configure(HttpSecurity http) throws Exception {\r\n        http.authorizeRequests()\r\n                .antMatchers(\"/\",\"/home\").access(\"hasRole('ROLE_USER')\")\r\n                .antMatchers(\"/admin\").access(\"hasRole('ROLE_ADMIN')\")\r\n                .and().formLogin().loginPage(\"/login\")\r\n                .successHandler(customSuccessHandler)\r\n                .usernameParameter(\"ssoId\").passwordParameter(\"password\")\r\n                .and().csrf()\r\n                .and().exceptionHandling().accessDeniedPage(\"/accessDenied\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/dits/configurators/SecurityConfiguration.java b/src/main/java/com/example/dits/configurators/SecurityConfiguration.java
--- a/src/main/java/com/example/dits/configurators/SecurityConfiguration.java	(revision 91e5551f41463d2446e008e699e10c75a1d9fc8e)
+++ b/src/main/java/com/example/dits/configurators/SecurityConfiguration.java	(date 1641314865553)
@@ -44,11 +44,22 @@
                         "users_role.roleId = role.roleId where login =?");
     }
 
+//    @Autowired
+//    public void configureGlobalSecurity(AuthenticationManagerBuilder auth) throws Exception{
+//        auth.inMemoryAuthentication()
+//                .passwordEncoder(passwordEncoder)
+//                .withUser("user").password(passwordEncoder.encode("user"))
+//                .roles("USER")
+//                .and()
+//                .withUser("admin")
+//                .password(passwordEncoder.encode("admin")).roles("ADMIN");
+//    }
+
     @Override
     protected void configure(HttpSecurity http) throws Exception {
         http.authorizeRequests()
-                .antMatchers("/","/home").access("hasRole('ROLE_USER')")
-                .antMatchers("/admin").access("hasRole('ROLE_ADMIN')")
+                .antMatchers("/","/home","/user").hasRole("USER")
+                .antMatchers("/admin").hasRole("ADMIN")
                 .and().formLogin().loginPage("/login")
                 .successHandler(customSuccessHandler)
                 .usernameParameter("ssoId").passwordParameter("password")
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.url=jdbc:mysql://127.0.0.1:3306/user_db?allowPublicKeyRetrieval=true&useSSL=false\r\nspring.datasource.username=bestuser\r\nspring.datasource.password=bestuser\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.jpa.show-sql=false\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl\r\n\r\n\r\nspring.jpa.properties.hibernate.format_sql=true\r\nlogging.level.org.springframework.web= DEBUG
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 91e5551f41463d2446e008e699e10c75a1d9fc8e)
+++ b/src/main/resources/application.properties	(date 1641308314660)
@@ -2,7 +2,7 @@
 spring.datasource.username=bestuser
 spring.datasource.password=bestuser
 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
-spring.jpa.show-sql=false
+spring.jpa.show-sql=true
 spring.jpa.hibernate.ddl-auto=update
 spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
 
Index: src/main/java/com/example/dits/controllers/SecurityController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.dits.controllers;\r\n\r\nimport org.springframework.security.core.Authentication;\r\nimport org.springframework.security.core.context.SecurityContextHolder;\r\nimport org.springframework.security.core.userdetails.UserDetails;\r\nimport org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.ui.ModelMap;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n@Controller\r\npublic class SecurityController {\r\n\r\n    @GetMapping(\"/admin\")\r\n    public String adminPage(ModelMap model){\r\n        model.addAttribute(\"user\",getPrincipal());\r\n        return \"admin\";\r\n    }\r\n\r\n\r\n    @GetMapping(\"/user\")\r\n    public String userPage(ModelMap model) {\r\n        model.addAttribute(\"user\", getPrincipal());\r\n        return \"user\";\r\n    }\r\n\r\n    @GetMapping(\"/login\")\r\n    public String loginPage(){\r\n        return \"login\";}\r\n\r\n    @PostMapping(\"/login\")\r\n    public String afterLogin(){\r\n        return \"user\";}\r\n\r\n\r\n    @GetMapping(\"/error\")\r\n    public String loginError(Model model) {\r\n        model.addAttribute(\"loginError\", true);\r\n        return \"login\";\r\n    }\r\n\r\n\r\n    @GetMapping(\"/accessDenied\")\r\n    public String accessDeniedGet(){\r\n        return \"accessDenied\";\r\n    }\r\n\r\n    @GetMapping(\"/logout\")\r\n    public String logoutPage(HttpServletRequest request, HttpServletResponse response){\r\n        Authentication auth = SecurityContextHolder.getContext().getAuthentication();\r\n\r\n        if(auth != null)\r\n            new SecurityContextLogoutHandler().logout(request,response,auth);\r\n\r\n        return \"redirect:/login?logout\";\r\n    }\r\n\r\n\r\n    static String getPrincipal(){\r\n        String userName = null;\r\n        Object principal = SecurityContextHolder.getContext()\r\n                .getAuthentication().getPrincipal();\r\n\r\n        if(principal instanceof UserDetails){\r\n            userName = ((UserDetails) principal).getUsername();\r\n        }\r\n        else\r\n            userName = principal.toString();\r\n        return userName;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/dits/controllers/SecurityController.java b/src/main/java/com/example/dits/controllers/SecurityController.java
--- a/src/main/java/com/example/dits/controllers/SecurityController.java	(revision 91e5551f41463d2446e008e699e10c75a1d9fc8e)
+++ b/src/main/java/com/example/dits/controllers/SecurityController.java	(date 1641314974478)
@@ -35,6 +35,7 @@
 
     @PostMapping("/login")
     public String afterLogin(){
+        System.out.println("afterLogin");
         return "user";}
 
 
Index: src/main/resources/templates/accessDenied.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\"\r\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n<p>Afsdfsf</p>\r\n</body>\r\n<script src = \"static/main.js\"></script>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/accessDenied.html b/src/main/resources/templates/accessDenied.html
--- a/src/main/resources/templates/accessDenied.html	(revision 91e5551f41463d2446e008e699e10c75a1d9fc8e)
+++ b/src/main/resources/templates/accessDenied.html	(date 1641303919751)
@@ -8,7 +8,7 @@
     <title>Document</title>
 </head>
 <body>
-<p>Afsdfsf</p>
+<p>Afsdfsf/p>
 </body>
 <script src = "static/main.js"></script>
 </html>
\ No newline at end of file
